{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useParams,useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EditEmployeeForm(){const{id}=useParams();const navigate=useNavigate();const[formData,setFormData]=useState({});const[errors,setErrors]=useState({});const[feedbackMessage,setFeedbackMessage]=useState('');// Fetch the employee details when the component loads\nuseEffect(()=>{axios.get(`http://localhost:3001/employee/${id}`).then(response=>{const employee=response.data;// Format DateOfJoining to YYYY-MM-DD for the input field\nif(employee.DateOfJoining){employee.DateOfJoining=employee.DateOfJoining.split('T')[0];}setFormData(employee);}).catch(error=>{console.error('Error fetching employee:',error);setFeedbackMessage('Failed to load employee details');});},[id]);// Validate the form before submission\nconst validate=()=>{const newErrors={};if(!formData.EmployeeName)newErrors.EmployeeName='Employee Name is required';if(!formData.EmployeeID)newErrors.EmployeeID='Employee ID is required';if(!formData.EmployeeEmail||!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.EmployeeEmail)){newErrors.EmployeeEmail='Valid Email is required';}if(!formData.PhoneNumber||formData.PhoneNumber.length!==10){newErrors.PhoneNumber='Phone Number must be 10 digits';}if(!formData.Department)newErrors.Department='Department is required';if(!formData.Role)newErrors.Role='Role is required';if(!formData.DateOfJoining)newErrors.DateOfJoining='Date of Joining is required';setErrors(newErrors);return Object.keys(newErrors).length===0;};// Handle input field changes\nconst handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});setErrors({...errors,[name]:''});// Clear error for the specific field\n};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();if(!validate())return;try{// Submit the form data\nawait axios.put(`http://localhost:3001/employee/${id}`,formData);setFeedbackMessage('Employee updated successfully');navigate('/');// Navigate to the Employee List page\n}catch(error){console.error('Error updating employee:',error);setFeedbackMessage('Failed to update employee. Please try again.');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Employee\"}),feedbackMessage&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px',color:feedbackMessage.includes('Failed')?'red':'green'},children:feedbackMessage}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Employee Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"EmployeeName\",value:formData.EmployeeName||'',onChange:handleChange})]}),errors.EmployeeName&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.EmployeeName})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Employee ID:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"EmployeeID\",value:formData.EmployeeID||'',onChange:handleChange,readOnly:true// ID is usually not editable\n})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"EmployeeEmail\",value:formData.EmployeeEmail||'',onChange:handleChange})]}),errors.EmployeeEmail&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.EmployeeEmail})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Phone Number:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"PhoneNumber\",value:formData.PhoneNumber||'',onChange:handleChange})]}),errors.PhoneNumber&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.PhoneNumber})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Department:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Department\",value:formData.Department||'',onChange:handleChange})]}),errors.Department&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.Department})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Role:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Role\",value:formData.Role||'',onChange:handleChange})]}),errors.Role&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.Role})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Date of Joining:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"DateOfJoining\",value:formData.DateOfJoining||'',onChange:handleChange})]}),errors.DateOfJoining&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errors.DateOfJoining})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update\"})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","EditEmployeeForm","id","navigate","formData","setFormData","errors","setErrors","feedbackMessage","setFeedbackMessage","get","then","response","employee","data","DateOfJoining","split","catch","error","console","validate","newErrors","EmployeeName","EmployeeID","EmployeeEmail","test","PhoneNumber","length","Department","Role","Object","keys","handleChange","e","name","value","target","handleSubmit","preventDefault","put","onSubmit","children","style","marginBottom","color","includes","type","onChange","readOnly"],"sources":["D:/Projects/EmployeeManagement-master/EmployeeManagement-master/front-end/src/components/EditEmployeeForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function EditEmployeeForm() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n    // Fetch the employee details when the component loads\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/employee/${id}`)\r\n            .then((response) => {\r\n                const employee = response.data;\r\n                // Format DateOfJoining to YYYY-MM-DD for the input field\r\n                if (employee.DateOfJoining) {\r\n                    employee.DateOfJoining = employee.DateOfJoining.split('T')[0];\r\n                }\r\n                setFormData(employee);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching employee:', error);\r\n                setFeedbackMessage('Failed to load employee details');\r\n            });\r\n    }, [id]);\r\n\r\n    // Validate the form before submission\r\n    const validate = () => {\r\n        const newErrors = {};\r\n        if (!formData.EmployeeName) newErrors.EmployeeName = 'Employee Name is required';\r\n        if (!formData.EmployeeID) newErrors.EmployeeID = 'Employee ID is required';\r\n        if (!formData.EmployeeEmail || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.EmployeeEmail)) {\r\n            newErrors.EmployeeEmail = 'Valid Email is required';\r\n        }\r\n        if (!formData.PhoneNumber || formData.PhoneNumber.length !== 10) {\r\n            newErrors.PhoneNumber = 'Phone Number must be 10 digits';\r\n        }\r\n        if (!formData.Department) newErrors.Department = 'Department is required';\r\n        if (!formData.Role) newErrors.Role = 'Role is required';\r\n        if (!formData.DateOfJoining) newErrors.DateOfJoining = 'Date of Joining is required';\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    // Handle input field changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        setErrors({ ...errors, [name]: '' }); // Clear error for the specific field\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validate()) return;\r\n\r\n        try {\r\n            // Submit the form data\r\n            await axios.put(`http://localhost:3001/employee/${id}`, formData);\r\n            setFeedbackMessage('Employee updated successfully');\r\n            navigate('/'); // Navigate to the Employee List page\r\n        } catch (error) {\r\n            console.error('Error updating employee:', error);\r\n            setFeedbackMessage('Failed to update employee. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Edit Employee</h2>\r\n\r\n            {/* Feedback Message */}\r\n            {feedbackMessage && (\r\n                <div style={{ marginBottom: '10px', color: feedbackMessage.includes('Failed') ? 'red' : 'green' }}>\r\n                    {feedbackMessage}\r\n                </div>\r\n            )}\r\n\r\n            {/* Form Fields */}\r\n            <div>\r\n                <label>\r\n                    Employee Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"EmployeeName\"\r\n                        value={formData.EmployeeName || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.EmployeeName && <span style={{ color: 'red' }}>{errors.EmployeeName}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Employee ID:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"EmployeeID\"\r\n                        value={formData.EmployeeID || ''}\r\n                        onChange={handleChange}\r\n                        readOnly // ID is usually not editable\r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Email:\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"EmployeeEmail\"\r\n                        value={formData.EmployeeEmail || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.EmployeeEmail && <span style={{ color: 'red' }}>{errors.EmployeeEmail}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Phone Number:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"PhoneNumber\"\r\n                        value={formData.PhoneNumber || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.PhoneNumber && <span style={{ color: 'red' }}>{errors.PhoneNumber}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Department:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Department\"\r\n                        value={formData.Department || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.Department && <span style={{ color: 'red' }}>{errors.Department}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Role:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Role\"\r\n                        value={formData.Role || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.Role && <span style={{ color: 'red' }}>{errors.Role}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <label>\r\n                    Date of Joining:\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"DateOfJoining\"\r\n                        value={formData.DateOfJoining || ''}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                {errors.DateOfJoining && <span style={{ color: 'red' }}>{errors.DateOfJoining}</span>}\r\n            </div>\r\n\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}